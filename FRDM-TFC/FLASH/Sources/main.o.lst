   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.getCentralDifference,"ax",%progbits
  18              		.align	2
  19              		.global	getCentralDifference
  20              		.code	16
  21              		.thumb_func
  23              	getCentralDifference:
  24              	.LFB0:
  25              		.file 1 "../Sources/main.c"
   1:../Sources/main.c **** #include "derivative.h" /* include peripheral declarations */
   2:../Sources/main.c **** #include "TFC\TFC.h"
   3:../Sources/main.c **** #include <stdio.h>
   4:../Sources/main.c **** #include <stdlib.h>
   5:../Sources/main.c **** 
   6:../Sources/main.c **** int16_t * getCentralDifference(volatile uint16_t * lineScanCameraData){
  26              		.loc 1 6 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 7, -8
  32              		.cfi_offset 14, -4
  33 0002 86B0     		sub	sp, sp, #24
  34              	.LCFI1:
  35              		.cfi_def_cfa_offset 32
  36 0004 00AF     		add	r7, sp, #0
  37              	.LCFI2:
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
   7:../Sources/main.c **** 	
   8:../Sources/main.c **** static int16_t centralDifference[128];
   9:../Sources/main.c **** 	
  10:../Sources/main.c **** 	int i;
  11:../Sources/main.c **** 	
  12:../Sources/main.c **** 	for(i = 0; i < 128; i++){
  40              		.loc 1 12 0
  41 0008 0023     		mov	r3, #0
  42 000a 7B61     		str	r3, [r7, #20]
  43 000c 28E0     		b	.L2
  44              	.L6:
  45              	.LBB2:
  13:../Sources/main.c **** 		
  14:../Sources/main.c **** 		int j = i - 1;
  46              		.loc 1 14 0
  47 000e 7B69     		ldr	r3, [r7, #20]
  48 0010 013B     		sub	r3, r3, #1
  49 0012 3B61     		str	r3, [r7, #16]
  15:../Sources/main.c **** 		int k = i + 1;
  50              		.loc 1 15 0
  51 0014 7B69     		ldr	r3, [r7, #20]
  52 0016 0133     		add	r3, r3, #1
  53 0018 FB60     		str	r3, [r7, #12]
  16:../Sources/main.c **** 		
  17:../Sources/main.c **** 		if(j < 0){
  54              		.loc 1 17 0
  55 001a 3B69     		ldr	r3, [r7, #16]
  56 001c 002B     		cmp	r3, #0
  57 001e 01DA     		bge	.L3
  18:../Sources/main.c **** 			j = 0;
  58              		.loc 1 18 0
  59 0020 0023     		mov	r3, #0
  60 0022 3B61     		str	r3, [r7, #16]
  61              	.L3:
  19:../Sources/main.c **** 		}
  20:../Sources/main.c **** 		if(k > 127)
  62              		.loc 1 20 0
  63 0024 FB68     		ldr	r3, [r7, #12]
  64 0026 7F2B     		cmp	r3, #127
  65 0028 01DD     		ble	.L4
  21:../Sources/main.c **** 			k = 127;
  66              		.loc 1 21 0
  67 002a 7F23     		mov	r3, #127
  68 002c FB60     		str	r3, [r7, #12]
  69              	.L4:
  22:../Sources/main.c **** 		
  23:../Sources/main.c **** 		centralDifference[i] = (lineScanCameraData[k] - lineScanCameraData[j])/2;
  70              		.loc 1 23 0
  71 002e FB68     		ldr	r3, [r7, #12]
  72 0030 5B00     		lsl	r3, r3, #1
  73 0032 7A68     		ldr	r2, [r7, #4]
  74 0034 D318     		add	r3, r2, r3
  75 0036 1B88     		ldrh	r3, [r3]
  76 0038 9BB2     		uxth	r3, r3
  77 003a 1A1C     		mov	r2, r3
  78 003c 3B69     		ldr	r3, [r7, #16]
  79 003e 5B00     		lsl	r3, r3, #1
  80 0040 7968     		ldr	r1, [r7, #4]
  81 0042 CB18     		add	r3, r1, r3
  82 0044 1B88     		ldrh	r3, [r3]
  83 0046 9BB2     		uxth	r3, r3
  84 0048 D31A     		sub	r3, r2, r3
  85 004a 00D5     		bpl	.L5
  86 004c 0133     		add	r3, r3, #1
  87              	.L5:
  88 004e 5B10     		asr	r3, r3, #1
  89 0050 99B2     		uxth	r1, r3
  90 0052 074B     		ldr	r3, .L8
  91 0054 7A69     		ldr	r2, [r7, #20]
  92 0056 5200     		lsl	r2, r2, #1
  93 0058 D152     		strh	r1, [r2, r3]
  94              	.LBE2:
  12:../Sources/main.c **** 	for(i = 0; i < 128; i++){
  95              		.loc 1 12 0
  96 005a 7B69     		ldr	r3, [r7, #20]
  97 005c 0133     		add	r3, r3, #1
  98 005e 7B61     		str	r3, [r7, #20]
  99              	.L2:
  12:../Sources/main.c **** 	for(i = 0; i < 128; i++){
 100              		.loc 1 12 0 is_stmt 0
 101 0060 7B69     		ldr	r3, [r7, #20]
 102 0062 7F2B     		cmp	r3, #127
 103 0064 D3DD     		ble	.L6
  24:../Sources/main.c **** 
  25:../Sources/main.c **** 	}
  26:../Sources/main.c **** 	
  27:../Sources/main.c **** 	return centralDifference;
 104              		.loc 1 27 0 is_stmt 1
 105 0066 024B     		ldr	r3, .L8
  28:../Sources/main.c **** }
 106              		.loc 1 28 0
 107 0068 181C     		mov	r0, r3
 108 006a BD46     		mov	sp, r7
 109 006c 06B0     		add	sp, sp, #24
 110              		@ sp needed for prologue
 111 006e 80BD     		pop	{r7, pc}
 112              	.L9:
 113              		.align	2
 114              	.L8:
 115 0070 00000000 		.word	centralDifference.5289
 116              		.cfi_endproc
 117              	.LFE0:
 119              		.section	.text.getCentralPoint,"ax",%progbits
 120              		.align	2
 121              		.global	getCentralPoint
 122              		.code	16
 123              		.thumb_func
 125              	getCentralPoint:
 126              	.LFB1:
  29:../Sources/main.c **** 
  30:../Sources/main.c **** int getCentralPoint(int16 * centralDifferenceData){
 127              		.loc 1 30 0
 128              		.cfi_startproc
 129 0000 80B5     		push	{r7, lr}
 130              	.LCFI3:
 131              		.cfi_def_cfa_offset 8
 132              		.cfi_offset 7, -8
 133              		.cfi_offset 14, -4
 134 0002 88B0     		sub	sp, sp, #32
 135              	.LCFI4:
 136              		.cfi_def_cfa_offset 40
 137 0004 00AF     		add	r7, sp, #0
 138              	.LCFI5:
 139              		.cfi_def_cfa_register 7
 140 0006 7860     		str	r0, [r7, #4]
  31:../Sources/main.c **** 	uint16_t centralPoint;
  32:../Sources/main.c **** 	
  33:../Sources/main.c **** 	//loop through and find the max and min values then take the average to find the central point.
  34:../Sources/main.c **** 	int i;
  35:../Sources/main.c **** 	int maxi = 0;
 141              		.loc 1 35 0
 142 0008 0023     		mov	r3, #0
 143 000a BB61     		str	r3, [r7, #24]
  36:../Sources/main.c **** 	int mini = 0;
 144              		.loc 1 36 0
 145 000c 0023     		mov	r3, #0
 146 000e 7B61     		str	r3, [r7, #20]
  37:../Sources/main.c **** 	int16_t max = -5000;
 147              		.loc 1 37 0
 148 0010 3B1C     		mov	r3, r7
 149 0012 1233     		add	r3, r3, #18
 150 0014 264A     		ldr	r2, .L17
 151 0016 1A80     		strh	r2, [r3]
  38:../Sources/main.c **** 	int16_t min = 5000;
 152              		.loc 1 38 0
 153 0018 3B1C     		mov	r3, r7
 154 001a 1033     		add	r3, r3, #16
 155 001c 254A     		ldr	r2, .L17+4
 156 001e 1A80     		strh	r2, [r3]
  39:../Sources/main.c **** 	
  40:../Sources/main.c **** 	for(i = 0; i < 128; i++){
 157              		.loc 1 40 0
 158 0020 0023     		mov	r3, #0
 159 0022 FB61     		str	r3, [r7, #28]
 160 0024 2EE0     		b	.L11
 161              	.L14:
  41:../Sources/main.c **** 		if(centralDifferenceData[i] > max){
 162              		.loc 1 41 0
 163 0026 FB69     		ldr	r3, [r7, #28]
 164 0028 5B00     		lsl	r3, r3, #1
 165 002a 7A68     		ldr	r2, [r7, #4]
 166 002c D318     		add	r3, r2, r3
 167 002e 1B88     		ldrh	r3, [r3]
 168 0030 3A1C     		mov	r2, r7
 169 0032 1232     		add	r2, r2, #18
 170 0034 0021     		mov	r1, #0
 171 0036 525E     		ldrsh	r2, [r2, r1]
 172 0038 1BB2     		sxth	r3, r3
 173 003a 9A42     		cmp	r2, r3
 174 003c 09DA     		bge	.L12
  42:../Sources/main.c **** 			max = centralDifferenceData[i];
 175              		.loc 1 42 0
 176 003e FB69     		ldr	r3, [r7, #28]
 177 0040 5B00     		lsl	r3, r3, #1
 178 0042 7A68     		ldr	r2, [r7, #4]
 179 0044 D218     		add	r2, r2, r3
 180 0046 3B1C     		mov	r3, r7
 181 0048 1233     		add	r3, r3, #18
 182 004a 1288     		ldrh	r2, [r2]
 183 004c 1A80     		strh	r2, [r3]
  43:../Sources/main.c **** 			maxi = i;
 184              		.loc 1 43 0
 185 004e FB69     		ldr	r3, [r7, #28]
 186 0050 BB61     		str	r3, [r7, #24]
 187              	.L12:
  44:../Sources/main.c **** 		}
  45:../Sources/main.c **** 		if(centralDifferenceData[i] < min){
 188              		.loc 1 45 0
 189 0052 FB69     		ldr	r3, [r7, #28]
 190 0054 5B00     		lsl	r3, r3, #1
 191 0056 7A68     		ldr	r2, [r7, #4]
 192 0058 D318     		add	r3, r2, r3
 193 005a 1B88     		ldrh	r3, [r3]
 194 005c 3A1C     		mov	r2, r7
 195 005e 1032     		add	r2, r2, #16
 196 0060 0021     		mov	r1, #0
 197 0062 525E     		ldrsh	r2, [r2, r1]
 198 0064 1BB2     		sxth	r3, r3
 199 0066 9A42     		cmp	r2, r3
 200 0068 09DD     		ble	.L13
  46:../Sources/main.c **** 			min = centralDifferenceData[i];
 201              		.loc 1 46 0
 202 006a FB69     		ldr	r3, [r7, #28]
 203 006c 5B00     		lsl	r3, r3, #1
 204 006e 7A68     		ldr	r2, [r7, #4]
 205 0070 D218     		add	r2, r2, r3
 206 0072 3B1C     		mov	r3, r7
 207 0074 1033     		add	r3, r3, #16
 208 0076 1288     		ldrh	r2, [r2]
 209 0078 1A80     		strh	r2, [r3]
  47:../Sources/main.c **** 			mini = i;
 210              		.loc 1 47 0
 211 007a FB69     		ldr	r3, [r7, #28]
 212 007c 7B61     		str	r3, [r7, #20]
 213              	.L13:
  40:../Sources/main.c **** 	for(i = 0; i < 128; i++){
 214              		.loc 1 40 0
 215 007e FB69     		ldr	r3, [r7, #28]
 216 0080 0133     		add	r3, r3, #1
 217 0082 FB61     		str	r3, [r7, #28]
 218              	.L11:
  40:../Sources/main.c **** 	for(i = 0; i < 128; i++){
 219              		.loc 1 40 0 is_stmt 0
 220 0084 FB69     		ldr	r3, [r7, #28]
 221 0086 7F2B     		cmp	r3, #127
 222 0088 CDDD     		ble	.L14
  48:../Sources/main.c **** 		}
  49:../Sources/main.c **** 	}
  50:../Sources/main.c **** 	
  51:../Sources/main.c **** 	centralPoint = (maxi + mini)/2;//min is a negative number so need to take the absolute value to ac
 223              		.loc 1 51 0 is_stmt 1
 224 008a BA69     		ldr	r2, [r7, #24]
 225 008c 7B69     		ldr	r3, [r7, #20]
 226 008e D318     		add	r3, r2, r3
 227 0090 002B     		cmp	r3, #0
 228 0092 00DA     		bge	.L15
 229 0094 0133     		add	r3, r3, #1
 230              	.L15:
 231 0096 5B10     		asr	r3, r3, #1
 232 0098 1A1C     		mov	r2, r3
 233 009a 3B1C     		mov	r3, r7
 234 009c 0E33     		add	r3, r3, #14
 235 009e 1A80     		strh	r2, [r3]
  52:../Sources/main.c **** 	return centralPoint;
 236              		.loc 1 52 0
 237 00a0 3B1C     		mov	r3, r7
 238 00a2 0E33     		add	r3, r3, #14
 239 00a4 1B88     		ldrh	r3, [r3]
  53:../Sources/main.c **** }
 240              		.loc 1 53 0
 241 00a6 181C     		mov	r0, r3
 242 00a8 BD46     		mov	sp, r7
 243 00aa 08B0     		add	sp, sp, #32
 244              		@ sp needed for prologue
 245 00ac 80BD     		pop	{r7, pc}
 246              	.L18:
 247 00ae C046     		.align	2
 248              	.L17:
 249 00b0 78ECFFFF 		.word	-5000
 250 00b4 88130000 		.word	5000
 251              		.cfi_endproc
 252              	.LFE1:
 254              		.global	__aeabi_i2f
 255              		.global	__aeabi_fsub
 256              		.global	__aeabi_fdiv
 257              		.section	.text.getServoPosition,"ax",%progbits
 258              		.align	2
 259              		.global	getServoPosition
 260              		.code	16
 261              		.thumb_func
 263              	getServoPosition:
 264              	.LFB2:
  54:../Sources/main.c **** 
  55:../Sources/main.c **** float getServoPosition(int centralPoint){
 265              		.loc 1 55 0
 266              		.cfi_startproc
 267 0000 80B5     		push	{r7, lr}
 268              	.LCFI6:
 269              		.cfi_def_cfa_offset 8
 270              		.cfi_offset 7, -8
 271              		.cfi_offset 14, -4
 272 0002 84B0     		sub	sp, sp, #16
 273              	.LCFI7:
 274              		.cfi_def_cfa_offset 24
 275 0004 00AF     		add	r7, sp, #0
 276              	.LCFI8:
 277              		.cfi_def_cfa_register 7
 278 0006 7860     		str	r0, [r7, #4]
  56:../Sources/main.c **** 	float center = 64.0;
 279              		.loc 1 56 0
 280 0008 8523     		mov	r3, #133
 281 000a DB05     		lsl	r3, r3, #23
 282 000c FB60     		str	r3, [r7, #12]
  57:../Sources/main.c **** 	float servoAngle = (centralPoint - center)/center;
 283              		.loc 1 57 0
 284 000e 7868     		ldr	r0, [r7, #4]
 285 0010 FFF7FEFF 		bl	__aeabi_i2f
 286 0014 031C     		add	r3, r0, #0
 287 0016 181C     		add	r0, r3, #0
 288 0018 F968     		ldr	r1, [r7, #12]
 289 001a FFF7FEFF 		bl	__aeabi_fsub
 290 001e 031C     		add	r3, r0, #0
 291 0020 181C     		add	r0, r3, #0
 292 0022 F968     		ldr	r1, [r7, #12]
 293 0024 FFF7FEFF 		bl	__aeabi_fdiv
 294 0028 031C     		add	r3, r0, #0
 295 002a BB60     		str	r3, [r7, #8]
  58:../Sources/main.c **** 	return servoAngle;
 296              		.loc 1 58 0
 297 002c BB68     		ldr	r3, [r7, #8]
  59:../Sources/main.c **** }
 298              		.loc 1 59 0
 299 002e 181C     		add	r0, r3, #0
 300 0030 BD46     		mov	sp, r7
 301 0032 04B0     		add	sp, sp, #16
 302              		@ sp needed for prologue
 303 0034 80BD     		pop	{r7, pc}
 304              		.cfi_endproc
 305              	.LFE2:
 307 0036 C046     		.section	.rodata
 308              		.align	2
 309              	.LC4:
 310 0000 0D0A00   		.ascii	"\015\012\000"
 311 0003 00       		.align	2
 312              	.LC6:
 313 0004 4C3A00   		.ascii	"L:\000"
 314 0007 00       		.align	2
 315              	.LC8:
 316 0008 0A00     		.ascii	"\012\000"
 317 000a 0000     		.align	2
 318              	.LC11:
 319 000c 43656E74 		.ascii	"CentralPoint: %d\012\000"
 319      72616C50 
 319      6F696E74 
 319      3A202564 
 319      0A00
 320              		.global	__aeabi_fmul
 321              		.global	__aeabi_f2iz
 322 001e 0000     		.align	2
 323              	.LC13:
 324 0020 506F7369 		.ascii	"Position: %d\000"
 324      74696F6E 
 324      3A202564 
 324      00
 325 002d 000000   		.section	.text.main,"ax",%progbits
 326              		.align	2
 327              		.global	main
 328              		.code	16
 329              		.thumb_func
 331              	main:
 332              	.LFB3:
  60:../Sources/main.c **** 
  61:../Sources/main.c **** int main(void) {
 333              		.loc 1 61 0
 334              		.cfi_startproc
 335 0000 90B5     		push	{r4, r7, lr}
 336              	.LCFI9:
 337              		.cfi_def_cfa_offset 12
 338              		.cfi_offset 4, -12
 339              		.cfi_offset 7, -8
 340              		.cfi_offset 14, -4
 341 0002 87B0     		sub	sp, sp, #28
 342              	.LCFI10:
 343              		.cfi_def_cfa_offset 40
 344 0004 00AF     		add	r7, sp, #0
 345              	.LCFI11:
 346              		.cfi_def_cfa_register 7
  62:../Sources/main.c **** 	uint32_t t, i = 0;
 347              		.loc 1 62 0
 348 0006 0023     		mov	r3, #0
 349 0008 3B61     		str	r3, [r7, #16]
  63:../Sources/main.c **** 
  64:../Sources/main.c **** 	TFC_Init();
 350              		.loc 1 64 0
 351 000a FFF7FEFF 		bl	TFC_Init
 352              	.L43:
  65:../Sources/main.c **** 
  66:../Sources/main.c **** 	for (;;) {
  67:../Sources/main.c **** 		//TFC_Task must be called in your main loop.  This keeps certain processing happy (I.E. Serial po
  68:../Sources/main.c **** 		TFC_Task();
 353              		.loc 1 68 0
 354 000e FFF7FEFF 		bl	TFC_Task
  69:../Sources/main.c **** 
  70:../Sources/main.c **** 		//This Demo program will look at the middle 2 switch to select one of 4 demo modes.
  71:../Sources/main.c **** 		//Let's look at the middle 2 switches
  72:../Sources/main.c **** 		switch ((TFC_GetDIP_Switch() >> 1) & 0x03) {
 355              		.loc 1 72 0
 356 0012 FFF7FEFF 		bl	TFC_GetDIP_Switch
 357 0016 031C     		mov	r3, r0
 358 0018 5B08     		lsr	r3, r3, #1
 359 001a DBB2     		uxtb	r3, r3
 360 001c 1A1C     		mov	r2, r3
 361 001e 0323     		mov	r3, #3
 362 0020 1340     		and	r3, r2
 363 0022 022B     		cmp	r3, #2
 364 0024 00D1     		bne	.LCB292
 365 0026 77E0     		b	.L24	@long jump
 366              	.LCB292:
 367 0028 032B     		cmp	r3, #3
 368 002a 00D1     		bne	.LCB294
 369 002c 9AE0     		b	.L25	@long jump
 370              	.LCB294:
 371 002e 012B     		cmp	r3, #1
 372 0030 3ED0     		beq	.L23
  73:../Sources/main.c **** 		default:
  74:../Sources/main.c **** 		case 0:
  75:../Sources/main.c **** 			//Demo mode 0 just tests the switches and LED's
  76:../Sources/main.c **** 			
  77:../Sources/main.c **** 			 if(TFC_PUSH_BUTTON_0_PRESSED)
 373              		.loc 1 77 0
 374 0032 834B     		ldr	r3, .L46
 375 0034 1A69     		ldr	r2, [r3, #16]
 376 0036 8023     		mov	r3, #128
 377 0038 9B01     		lsl	r3, r3, #6
 378 003a 1340     		and	r3, r2
 379 003c 04D0     		beq	.L26
  78:../Sources/main.c **** 			 TFC_BAT_LED0_ON;
 380              		.loc 1 78 0
 381 003e 814B     		ldr	r3, .L46+4
 382 0040 8022     		mov	r2, #128
 383 0042 5200     		lsl	r2, r2, #1
 384 0044 5A60     		str	r2, [r3, #4]
 385 0046 03E0     		b	.L27
 386              	.L26:
  79:../Sources/main.c **** 			 else
  80:../Sources/main.c **** 			 TFC_BAT_LED0_OFF;
 387              		.loc 1 80 0
 388 0048 7E4B     		ldr	r3, .L46+4
 389 004a 8022     		mov	r2, #128
 390 004c 5200     		lsl	r2, r2, #1
 391 004e 9A60     		str	r2, [r3, #8]
 392              	.L27:
  81:../Sources/main.c **** 			 
  82:../Sources/main.c **** 			 if(TFC_PUSH_BUTTON_1_PRESSED)
 393              		.loc 1 82 0
 394 0050 7B4B     		ldr	r3, .L46
 395 0052 1A69     		ldr	r2, [r3, #16]
 396 0054 8023     		mov	r3, #128
 397 0056 9B02     		lsl	r3, r3, #10
 398 0058 1340     		and	r3, r2
 399 005a 04D0     		beq	.L28
  83:../Sources/main.c **** 			 TFC_BAT_LED3_ON;
 400              		.loc 1 83 0
 401 005c 794B     		ldr	r3, .L46+4
 402 005e 8022     		mov	r2, #128
 403 0060 1201     		lsl	r2, r2, #4
 404 0062 5A60     		str	r2, [r3, #4]
 405 0064 03E0     		b	.L29
 406              	.L28:
  84:../Sources/main.c **** 			 else
  85:../Sources/main.c **** 			 TFC_BAT_LED3_OFF;
 407              		.loc 1 85 0
 408 0066 774B     		ldr	r3, .L46+4
 409 0068 8022     		mov	r2, #128
 410 006a 1201     		lsl	r2, r2, #4
 411 006c 9A60     		str	r2, [r3, #8]
 412              	.L29:
  86:../Sources/main.c **** 			 
  87:../Sources/main.c **** 			 
  88:../Sources/main.c **** 			 if(TFC_GetDIP_Switch()&0x01)
 413              		.loc 1 88 0
 414 006e FFF7FEFF 		bl	TFC_GetDIP_Switch
 415 0072 031C     		mov	r3, r0
 416 0074 1A1C     		mov	r2, r3
 417 0076 0123     		mov	r3, #1
 418 0078 1340     		and	r3, r2
 419 007a 04D0     		beq	.L30
  89:../Sources/main.c **** 			 TFC_BAT_LED1_ON;
 420              		.loc 1 89 0
 421 007c 714B     		ldr	r3, .L46+4
 422 007e 8022     		mov	r2, #128
 423 0080 9200     		lsl	r2, r2, #2
 424 0082 5A60     		str	r2, [r3, #4]
 425 0084 03E0     		b	.L31
 426              	.L30:
  90:../Sources/main.c **** 			 else
  91:../Sources/main.c **** 			 TFC_BAT_LED1_OFF;
 427              		.loc 1 91 0
 428 0086 6F4B     		ldr	r3, .L46+4
 429 0088 8022     		mov	r2, #128
 430 008a 9200     		lsl	r2, r2, #2
 431 008c 9A60     		str	r2, [r3, #8]
 432              	.L31:
  92:../Sources/main.c **** 			 
  93:../Sources/main.c **** 			 if(TFC_GetDIP_Switch()&0x08)
 433              		.loc 1 93 0
 434 008e FFF7FEFF 		bl	TFC_GetDIP_Switch
 435 0092 031C     		mov	r3, r0
 436 0094 1A1C     		mov	r2, r3
 437 0096 0823     		mov	r3, #8
 438 0098 1340     		and	r3, r2
 439 009a 04D0     		beq	.L32
  94:../Sources/main.c **** 			 TFC_BAT_LED2_ON;
 440              		.loc 1 94 0
 441 009c 694B     		ldr	r3, .L46+4
 442 009e 8022     		mov	r2, #128
 443 00a0 D200     		lsl	r2, r2, #3
 444 00a2 5A60     		str	r2, [r3, #4]
  95:../Sources/main.c **** 			 else
  96:../Sources/main.c **** 			 TFC_BAT_LED2_OFF;
  97:../Sources/main.c **** 			
  98:../Sources/main.c **** 			break;
 445              		.loc 1 98 0
 446 00a4 CBE0     		b	.L34
 447              	.L32:
  96:../Sources/main.c **** 			 TFC_BAT_LED2_OFF;
 448              		.loc 1 96 0
 449 00a6 674B     		ldr	r3, .L46+4
 450 00a8 8022     		mov	r2, #128
 451 00aa D200     		lsl	r2, r2, #3
 452 00ac 9A60     		str	r2, [r3, #8]
 453              		.loc 1 98 0
 454 00ae C6E0     		b	.L34
 455              	.L23:
  99:../Sources/main.c **** 
 100:../Sources/main.c **** 		case 1:
 101:../Sources/main.c **** 
 102:../Sources/main.c **** 			//Demo mode 1 will just move the servos with the on-board potentiometers
 103:../Sources/main.c **** 			if (TFC_Ticker[0] >= 20) {
 456              		.loc 1 103 0
 457 00b0 654B     		ldr	r3, .L46+8
 458 00b2 1B68     		ldr	r3, [r3]
 459 00b4 132B     		cmp	r3, #19
 460 00b6 10D9     		bls	.L35
 104:../Sources/main.c **** 				TFC_Ticker[0] = 0; //reset the Ticker
 461              		.loc 1 104 0
 462 00b8 634B     		ldr	r3, .L46+8
 463 00ba 0022     		mov	r2, #0
 464 00bc 1A60     		str	r2, [r3]
 105:../Sources/main.c **** 				//Every 20 mSeconds, update the Servos
 106:../Sources/main.c **** 				TFC_SetServo(0, TFC_ReadPot(0));
 465              		.loc 1 106 0
 466 00be 0020     		mov	r0, #0
 467 00c0 FFF7FEFF 		bl	TFC_ReadPot
 468 00c4 031C     		add	r3, r0, #0
 469 00c6 0020     		mov	r0, #0
 470 00c8 191C     		add	r1, r3, #0
 471 00ca FFF7FEFF 		bl	TFC_SetServo
 107:../Sources/main.c **** 				TFC_SetServo(1, 1);
 472              		.loc 1 107 0
 473 00ce FE23     		mov	r3, #254
 474 00d0 9B05     		lsl	r3, r3, #22
 475 00d2 0120     		mov	r0, #1
 476 00d4 191C     		add	r1, r3, #0
 477 00d6 FFF7FEFF 		bl	TFC_SetServo
 478              	.L35:
 108:../Sources/main.c **** 			}
 109:../Sources/main.c **** 			//Let's put a pattern on the LEDs
 110:../Sources/main.c **** 			if (TFC_Ticker[1] >= 125) {
 479              		.loc 1 110 0
 480 00da 5B4B     		ldr	r3, .L46+8
 481 00dc 5B68     		ldr	r3, [r3, #4]
 482 00de 7C2B     		cmp	r3, #124
 483 00e0 0FD9     		bls	.L36
 111:../Sources/main.c **** 				TFC_Ticker[1] = 0;
 484              		.loc 1 111 0
 485 00e2 594B     		ldr	r3, .L46+8
 486 00e4 0022     		mov	r2, #0
 487 00e6 5A60     		str	r2, [r3, #4]
 112:../Sources/main.c **** 				t++;
 488              		.loc 1 112 0
 489 00e8 7B69     		ldr	r3, [r7, #20]
 490 00ea 0133     		add	r3, r3, #1
 491 00ec 7B61     		str	r3, [r7, #20]
 113:../Sources/main.c **** 				if (t > 4) {
 492              		.loc 1 113 0
 493 00ee 7B69     		ldr	r3, [r7, #20]
 494 00f0 042B     		cmp	r3, #4
 495 00f2 01D9     		bls	.L37
 114:../Sources/main.c **** 					t = 0;
 496              		.loc 1 114 0
 497 00f4 0023     		mov	r3, #0
 498 00f6 7B61     		str	r3, [r7, #20]
 499              	.L37:
 115:../Sources/main.c **** 				}
 116:../Sources/main.c **** 				TFC_SetBatteryLED_Level(t);
 500              		.loc 1 116 0
 501 00f8 7B69     		ldr	r3, [r7, #20]
 502 00fa DBB2     		uxtb	r3, r3
 503 00fc 181C     		mov	r0, r3
 504 00fe FFF7FEFF 		bl	TFC_SetBatteryLED_Level
 505              	.L36:
 117:../Sources/main.c **** 			}
 118:../Sources/main.c **** 			
 119:../Sources/main.c **** 			TFC_SetMotorPWM(0, 0); //Make sure motors are off
 506              		.loc 1 119 0
 507 0102 0022     		mov	r2, #0
 508 0104 0023     		mov	r3, #0
 509 0106 101C     		add	r0, r2, #0
 510 0108 191C     		add	r1, r3, #0
 511 010a FFF7FEFF 		bl	TFC_SetMotorPWM
 120:../Sources/main.c **** 			TFC_HBRIDGE_DISABLE;
 512              		.loc 1 120 0
 513 010e 4F4B     		ldr	r3, .L46+12
 514 0110 8022     		mov	r2, #128
 515 0112 9203     		lsl	r2, r2, #14
 516 0114 9A60     		str	r2, [r3, #8]
 121:../Sources/main.c **** 
 122:../Sources/main.c **** 			break;
 517              		.loc 1 122 0
 518 0116 92E0     		b	.L34
 519              	.L24:
 123:../Sources/main.c **** 
 124:../Sources/main.c **** 		case 2:
 125:../Sources/main.c **** 
 126:../Sources/main.c **** 			//Demo Mode 2 will use the Pots to make the motors move
 127:../Sources/main.c **** 			TFC_HBRIDGE_ENABLE;			
 520              		.loc 1 127 0
 521 0118 4C4B     		ldr	r3, .L46+12
 522 011a 8022     		mov	r2, #128
 523 011c 9203     		lsl	r2, r2, #14
 524 011e 5A60     		str	r2, [r3, #4]
 128:../Sources/main.c **** 			TFC_SetMotorPWM(TFC_ReadPot(1),TFC_ReadPot(0));
 525              		.loc 1 128 0
 526 0120 0120     		mov	r0, #1
 527 0122 FFF7FEFF 		bl	TFC_ReadPot
 528 0126 041C     		add	r4, r0, #0
 529 0128 0020     		mov	r0, #0
 530 012a FFF7FEFF 		bl	TFC_ReadPot
 531 012e 031C     		add	r3, r0, #0
 532 0130 201C     		add	r0, r4, #0
 533 0132 191C     		add	r1, r3, #0
 534 0134 FFF7FEFF 		bl	TFC_SetMotorPWM
 129:../Sources/main.c **** 			
 130:../Sources/main.c **** 			//Let's put a pattern on the LEDs
 131:../Sources/main.c **** 			if (TFC_Ticker[1] >= 125) {
 535              		.loc 1 131 0
 536 0138 434B     		ldr	r3, .L46+8
 537 013a 5B68     		ldr	r3, [r3, #4]
 538 013c 7C2B     		cmp	r3, #124
 539 013e 00D8     		bhi	.LCB455
 540 0140 7AE0     		b	.L44	@long jump
 541              	.LCB455:
 132:../Sources/main.c **** 				TFC_Ticker[1] = 0;
 542              		.loc 1 132 0
 543 0142 414B     		ldr	r3, .L46+8
 544 0144 0022     		mov	r2, #0
 545 0146 5A60     		str	r2, [r3, #4]
 133:../Sources/main.c **** 				t++;
 546              		.loc 1 133 0
 547 0148 7B69     		ldr	r3, [r7, #20]
 548 014a 0133     		add	r3, r3, #1
 549 014c 7B61     		str	r3, [r7, #20]
 134:../Sources/main.c **** 				if (t > 4) {
 550              		.loc 1 134 0
 551 014e 7B69     		ldr	r3, [r7, #20]
 552 0150 042B     		cmp	r3, #4
 553 0152 01D9     		bls	.L39
 135:../Sources/main.c **** 					t = 0;
 554              		.loc 1 135 0
 555 0154 0023     		mov	r3, #0
 556 0156 7B61     		str	r3, [r7, #20]
 557              	.L39:
 136:../Sources/main.c **** 				}
 137:../Sources/main.c **** 				TFC_SetBatteryLED_Level(t);
 558              		.loc 1 137 0
 559 0158 7B69     		ldr	r3, [r7, #20]
 560 015a DBB2     		uxtb	r3, r3
 561 015c 181C     		mov	r0, r3
 562 015e FFF7FEFF 		bl	TFC_SetBatteryLED_Level
 138:../Sources/main.c **** 			}
 139:../Sources/main.c **** 			break;
 563              		.loc 1 139 0
 564 0162 69E0     		b	.L44
 565              	.L25:
 140:../Sources/main.c **** 
 141:../Sources/main.c **** 		case 3:
 142:../Sources/main.c **** 
 143:../Sources/main.c **** 			//Demo Mode 3 will be in Freescale Garage Mode.  It will beam data from the Camera to the 
 144:../Sources/main.c **** 			//Labview Application
 145:../Sources/main.c **** 			TFC_HBRIDGE_ENABLE;			
 566              		.loc 1 145 0
 567 0164 394B     		ldr	r3, .L46+12
 568 0166 8022     		mov	r2, #128
 569 0168 9203     		lsl	r2, r2, #14
 570 016a 5A60     		str	r2, [r3, #4]
 146:../Sources/main.c **** 			//TFC_SetMotorPWM(TFC_ReadPot(0),TFC_ReadPot(0));
 147:../Sources/main.c **** 			
 148:../Sources/main.c **** 			if (TFC_Ticker[0] > 100 && LineScanImageReady == 1) {
 571              		.loc 1 148 0
 572 016c 364B     		ldr	r3, .L46+8
 573 016e 1B68     		ldr	r3, [r3]
 574 0170 642B     		cmp	r3, #100
 575 0172 63D9     		bls	.L45
 576              		.loc 1 148 0 is_stmt 0
 577 0174 364B     		ldr	r3, .L46+16
 578 0176 1B78     		ldrb	r3, [r3]
 579 0178 DBB2     		uxtb	r3, r3
 580 017a 012B     		cmp	r3, #1
 581 017c 5ED1     		bne	.L45
 582              	.LBB3:
 149:../Sources/main.c **** 				TFC_Ticker[0] = 0;
 583              		.loc 1 149 0 is_stmt 1
 584 017e 324B     		ldr	r3, .L46+8
 585 0180 0022     		mov	r2, #0
 586 0182 1A60     		str	r2, [r3]
 150:../Sources/main.c **** 				LineScanImageReady = 0;
 587              		.loc 1 150 0
 588 0184 324B     		ldr	r3, .L46+16
 589 0186 0022     		mov	r2, #0
 590 0188 1A70     		strb	r2, [r3]
 151:../Sources/main.c **** 				TERMINAL_PRINTF("\r\n");
 591              		.loc 1 151 0
 592 018a 324A     		ldr	r2, .L46+20
 593 018c 324B     		ldr	r3, .L46+24
 594 018e 101C     		mov	r0, r2
 595 0190 191C     		mov	r1, r3
 596 0192 FFF7FEFF 		bl	Qprintf
 152:../Sources/main.c **** 				TERMINAL_PRINTF("L:");
 597              		.loc 1 152 0
 598 0196 2F4A     		ldr	r2, .L46+20
 599 0198 304B     		ldr	r3, .L46+28
 600 019a 101C     		mov	r0, r2
 601 019c 191C     		mov	r1, r3
 602 019e FFF7FEFF 		bl	Qprintf
 153:../Sources/main.c **** 
 154:../Sources/main.c **** 				if (t == 0)
 603              		.loc 1 154 0
 604 01a2 7B69     		ldr	r3, [r7, #20]
 605 01a4 002B     		cmp	r3, #0
 606 01a6 02D1     		bne	.L41
 155:../Sources/main.c **** 					t = 3;
 607              		.loc 1 155 0
 608 01a8 0323     		mov	r3, #3
 609 01aa 7B61     		str	r3, [r7, #20]
 610 01ac 02E0     		b	.L42
 611              	.L41:
 156:../Sources/main.c **** 				else
 157:../Sources/main.c **** 					t--;
 612              		.loc 1 157 0
 613 01ae 7B69     		ldr	r3, [r7, #20]
 614 01b0 013B     		sub	r3, r3, #1
 615 01b2 7B61     		str	r3, [r7, #20]
 616              	.L42:
 158:../Sources/main.c **** 
 159:../Sources/main.c **** 				TFC_SetBatteryLED_Level(t);
 617              		.loc 1 159 0
 618 01b4 7B69     		ldr	r3, [r7, #20]
 619 01b6 DBB2     		uxtb	r3, r3
 620 01b8 181C     		mov	r0, r3
 621 01ba FFF7FEFF 		bl	TFC_SetBatteryLED_Level
 160:../Sources/main.c **** 
 161:../Sources/main.c **** //				for (i = 0; i < 128; i++) {
 162:../Sources/main.c **** //					TERMINAL_PRINTF("%d ", LineScanImage0[i]);
 163:../Sources/main.c **** //				}
 164:../Sources/main.c **** 				
 165:../Sources/main.c **** 				TERMINAL_PRINTF("\n");
 622              		.loc 1 165 0
 623 01be 254A     		ldr	r2, .L46+20
 624 01c0 274B     		ldr	r3, .L46+32
 625 01c2 101C     		mov	r0, r2
 626 01c4 191C     		mov	r1, r3
 627 01c6 FFF7FEFF 		bl	Qprintf
 166:../Sources/main.c **** 				
 167:../Sources/main.c **** 				int16_t * centralDifference = getCentralDifference(LineScanImage0);
 628              		.loc 1 167 0
 629 01ca 264B     		ldr	r3, .L46+36
 630 01cc 1B68     		ldr	r3, [r3]
 631 01ce 181C     		mov	r0, r3
 632 01d0 FFF7FEFF 		bl	getCentralDifference
 633 01d4 031C     		mov	r3, r0
 634 01d6 FB60     		str	r3, [r7, #12]
 168:../Sources/main.c **** 				int centralPoint = getCentralPoint(centralDifference);
 635              		.loc 1 168 0
 636 01d8 FB68     		ldr	r3, [r7, #12]
 637 01da 181C     		mov	r0, r3
 638 01dc FFF7FEFF 		bl	getCentralPoint
 639 01e0 031C     		mov	r3, r0
 640 01e2 BB60     		str	r3, [r7, #8]
 169:../Sources/main.c **** 				TERMINAL_PRINTF("CentralPoint: %d\n", centralPoint);
 641              		.loc 1 169 0
 642 01e4 1B49     		ldr	r1, .L46+20
 643 01e6 204A     		ldr	r2, .L46+40
 644 01e8 BB68     		ldr	r3, [r7, #8]
 645 01ea 081C     		mov	r0, r1
 646 01ec 111C     		mov	r1, r2
 647 01ee 1A1C     		mov	r2, r3
 648 01f0 FFF7FEFF 		bl	Qprintf
 170:../Sources/main.c **** 				float servoPosition = getServoPosition(centralPoint);
 649              		.loc 1 170 0
 650 01f4 BB68     		ldr	r3, [r7, #8]
 651 01f6 181C     		mov	r0, r3
 652 01f8 FFF7FEFF 		bl	getServoPosition
 653 01fc 031C     		add	r3, r0, #0
 654 01fe 7B60     		str	r3, [r7, #4]
 171:../Sources/main.c **** 				TERMINAL_PRINTF("Position: %d", (int) (servoPosition*100));
 655              		.loc 1 171 0
 656 0200 7868     		ldr	r0, [r7, #4]
 657 0202 1A49     		ldr	r1, .L46+44
 658 0204 FFF7FEFF 		bl	__aeabi_fmul
 659 0208 031C     		add	r3, r0, #0
 660 020a 181C     		add	r0, r3, #0
 661 020c FFF7FEFF 		bl	__aeabi_f2iz
 662 0210 031C     		mov	r3, r0
 663 0212 1049     		ldr	r1, .L46+20
 664 0214 164A     		ldr	r2, .L46+48
 665 0216 081C     		mov	r0, r1
 666 0218 111C     		mov	r1, r2
 667 021a 1A1C     		mov	r2, r3
 668 021c FFF7FEFF 		bl	Qprintf
 172:../Sources/main.c **** 			
 173:../Sources/main.c **** 				TFC_SetServo(0, servoPosition);			
 669              		.loc 1 173 0
 670 0220 7B68     		ldr	r3, [r7, #4]
 671 0222 0020     		mov	r0, #0
 672 0224 191C     		add	r1, r3, #0
 673 0226 FFF7FEFF 		bl	TFC_SetServo
 174:../Sources/main.c **** 				TFC_SetMotorPWM(0.1,0.1);
 674              		.loc 1 174 0
 675 022a 124A     		ldr	r2, .L46+52
 676 022c 114B     		ldr	r3, .L46+52
 677 022e 101C     		add	r0, r2, #0
 678 0230 191C     		add	r1, r3, #0
 679 0232 FFF7FEFF 		bl	TFC_SetMotorPWM
 680              	.LBE3:
 175:../Sources/main.c **** 						
 176:../Sources/main.c **** 			}
 177:../Sources/main.c **** 
 178:../Sources/main.c **** 			break;
 681              		.loc 1 178 0
 682 0236 01E0     		b	.L45
 683              	.L44:
 139:../Sources/main.c **** 			break;
 684              		.loc 1 139 0
 685 0238 C046     		mov	r8, r8
 686 023a 00E0     		b	.L34
 687              	.L45:
 688              		.loc 1 178 0
 689 023c C046     		mov	r8, r8
 690              	.L34:
 179:../Sources/main.c **** 		}
 180:../Sources/main.c **** 	}
 691              		.loc 1 180 0
 692 023e E6E6     		b	.L43
 693              	.L47:
 694              		.align	2
 695              	.L46:
 696 0240 80F00F40 		.word	1074786432
 697 0244 40F00F40 		.word	1074786368
 698 0248 00000000 		.word	TFC_Ticker
 699 024c 00F10F40 		.word	1074786560
 700 0250 00000000 		.word	LineScanImageReady
 701 0254 00000000 		.word	SDA_SERIAL_OUTGOING_QUEUE
 702 0258 00000000 		.word	.LC4
 703 025c 04000000 		.word	.LC6
 704 0260 08000000 		.word	.LC8
 705 0264 00000000 		.word	LineScanImage0
 706 0268 0C000000 		.word	.LC11
 707 026c 0000C842 		.word	1120403456
 708 0270 20000000 		.word	.LC13
 709 0274 CDCCCC3D 		.word	1036831949
 710              		.cfi_endproc
 711              	.LFE3:
 713              		.section	.bss.centralDifference.5289,"aw",%nobits
 714              		.align	2
 717              	centralDifference.5289:
 718 0000 00000000 		.space	256
 718      00000000 
 718      00000000 
 718      00000000 
 718      00000000 
 719              		.text
 720              	.Letext0:
 721              		.file 2 "C:/Freescale/CW MCU v10.6.4/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 722              		.file 3 "C:/Users/Edward Wilkie/workspace/FRDM-TFC/Project_Headers/MKL25Z4.h"
 723              		.file 4 "C:/Users/Edward Wilkie/workspace/FRDM-TFC/Project_Headers/TFC\\TFC_arm_cm0.h"
 724              		.file 5 "C:/Users/Edward Wilkie/workspace/FRDM-TFC/Project_Headers/TFC\\TFC_Queue.h"
 725              		.file 6 "C:/Users/Edward Wilkie/workspace/FRDM-TFC/Project_Headers/TFC\\TFC_ARM_SysTick.h"
 726              		.file 7 "C:/Users/Edward Wilkie/workspace/FRDM-TFC/Project_Headers/TFC\\TFC_LineScanCamera.h"
 727              		.file 8 "C:/Users/Edward Wilkie/workspace/FRDM-TFC/Project_Headers/TFC\\TFC_UART.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\EDWARD~1\AppData\Local\Temp\ccEHXn1o.s:18     .text.getCentralDifference:00000000 $t
C:\Users\EDWARD~1\AppData\Local\Temp\ccEHXn1o.s:23     .text.getCentralDifference:00000000 getCentralDifference
C:\Users\EDWARD~1\AppData\Local\Temp\ccEHXn1o.s:115    .text.getCentralDifference:00000070 $d
C:\Users\EDWARD~1\AppData\Local\Temp\ccEHXn1o.s:717    .bss.centralDifference.5289:00000000 centralDifference.5289
C:\Users\EDWARD~1\AppData\Local\Temp\ccEHXn1o.s:120    .text.getCentralPoint:00000000 $t
C:\Users\EDWARD~1\AppData\Local\Temp\ccEHXn1o.s:125    .text.getCentralPoint:00000000 getCentralPoint
C:\Users\EDWARD~1\AppData\Local\Temp\ccEHXn1o.s:249    .text.getCentralPoint:000000b0 $d
C:\Users\EDWARD~1\AppData\Local\Temp\ccEHXn1o.s:258    .text.getServoPosition:00000000 $t
C:\Users\EDWARD~1\AppData\Local\Temp\ccEHXn1o.s:263    .text.getServoPosition:00000000 getServoPosition
C:\Users\EDWARD~1\AppData\Local\Temp\ccEHXn1o.s:308    .rodata:00000000 $d
C:\Users\EDWARD~1\AppData\Local\Temp\ccEHXn1o.s:326    .text.main:00000000 $t
C:\Users\EDWARD~1\AppData\Local\Temp\ccEHXn1o.s:331    .text.main:00000000 main
C:\Users\EDWARD~1\AppData\Local\Temp\ccEHXn1o.s:696    .text.main:00000240 $d
C:\Users\EDWARD~1\AppData\Local\Temp\ccEHXn1o.s:714    .bss.centralDifference.5289:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_i2f
__aeabi_fsub
__aeabi_fdiv
__aeabi_fmul
__aeabi_f2iz
TFC_Init
TFC_Task
TFC_GetDIP_Switch
TFC_ReadPot
TFC_SetServo
TFC_SetBatteryLED_Level
TFC_SetMotorPWM
Qprintf
TFC_Ticker
LineScanImageReady
SDA_SERIAL_OUTGOING_QUEUE
LineScanImage0
